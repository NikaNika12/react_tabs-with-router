{"version":3,"sources":["Components/PageNavlink.tsx","Components/MainNav.tsx","Components/TabsPage.tsx","Components/HomePage.tsx","Components/PageNotFound.tsx","App.tsx","index.tsx"],"names":["PageNavlink","to","text","className","isActive","classNames","MainNav","TabsPage","tabs","useParams","tabId","isSelectedTab","useMemo","find","tab","id","map","title","content","HomePage","PageNotFound","App","path","element","replace","index","ReactDOM","render","document","getElementById"],"mappings":"gPAQaA,EAA+B,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OAC1C,cAAC,IAAD,CACEC,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,cACA,CAAE,YAAaD,KAEjBH,GAAIA,EALN,SAOGC,KCdQI,EAAoB,kBAC/B,qBACEH,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAaF,GAAG,IAAIC,KAAK,SACzB,cAAC,EAAD,CAAaD,GAAG,QAAQC,KAAK,iB,OCDxBK,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC1C,EAAuBC,cAAfC,aAAR,MAAgB,GAAhB,EAEMC,EAAgBC,mBAAQ,WAC5B,OAAOJ,EAAKK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,OAClC,CAACA,IAEJ,OACE,qCACE,oBAAIP,UAAU,QAAd,uBAEA,qBAAKA,UAAU,gBAAf,SACE,6BACGK,EAAKQ,KAAI,SAAAF,GAAG,OACX,oBACE,UAAQ,MACRX,UAAWE,IACT,CAAE,YAAaK,IAAUI,EAAIC,KAHjC,SAOE,cAAC,IAAD,CACEd,GAAE,aAAQa,EAAIC,IADhB,SAGGD,EAAIG,SALFH,EAAIC,WAYjB,qBAAKZ,UAAU,QAAQ,UAAQ,aAA/B,UACiB,OAAbQ,QAAa,IAAbA,OAAA,EAAAA,EAAeO,UAAW,4BCzCvBC,EAAW,WACtB,OACE,oBAAIhB,UAAU,QAAd,wBCFSiB,EAAe,WAC1B,OACE,oBAAIjB,UAAU,QAAd,6BCSEK,EAAO,CACX,CAAEO,GAAI,QAASE,MAAO,QAASC,QAAS,eACxC,CAAEH,GAAI,QAASE,MAAO,QAASC,QAAS,eACxC,CAAEH,GAAI,QAASE,MAAO,QAASC,QAAS,gBAG7BG,EAAM,WACjB,OACE,sBAAKlB,UAAU,uBAAf,UACE,cAAC,EAAD,IAEA,qBAAKA,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEmB,KAAK,IACLC,QAAS,cAAC,EAAD,MAGX,cAAC,IAAD,CACED,KAAK,OACLC,QAAS,cAAC,IAAD,CAAUtB,GAAG,IAAIuB,SAAO,MAGnC,eAAC,IAAD,CAAOF,KAAK,OAAZ,UACE,cAAC,IAAD,CACEG,OAAK,EACLF,QACE,cAAC,EAAD,CACEf,KAAMA,MAIZ,cAAC,IAAD,CACEc,KAAK,SACLC,QACE,cAAC,EAAD,CACEf,KAAMA,SAMd,cAAC,IAAD,CACEc,KAAK,IACLC,QAAS,cAAC,EAAD,iBCpDvBG,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4f1bad99.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavlink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'is-active': isActive },\n    )}\n    to={to}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavlink } from './PageNavlink';\n\nexport const MainNav: React.FC = () => (\n  <nav\n    className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n    data-cy=\"Nav\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavlink to=\"/\" text=\"Home\" />\n        <PageNavlink to=\"/tabs\" text=\"Tabs\" />\n      </div>\n    </div>\n  </nav>\n);\n","import classNames from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\nimport { useMemo } from 'react';\nimport { Tab } from '../types/Tab';\n\ntype Props = {\n  tabs: Tab[]\n};\n\nexport const TabsPage: React.FC<Props> = ({ tabs }) => {\n  const { tabId = '' } = useParams();\n\n  const isSelectedTab = useMemo(() => {\n    return tabs.find(tab => tab.id === tabId);\n  }, [tabId]);\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              data-cy=\"Tab\"\n              className={classNames(\n                { 'is-active': tabId === tab.id },\n              )}\n              key={tab.id}\n            >\n              <Link\n                to={`../${tab.id}`}\n              >\n                {tab.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        { isSelectedTab?.content || 'Please select a tab' }\n      </div>\n    </>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home page</h1>\n  );\n};\n","export const PageNotFound = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport {\n  Navigate, Route, Routes,\n} from 'react-router-dom';\nimport { MainNav } from './Components/MainNav';\nimport { TabsPage } from './Components/TabsPage';\nimport { HomePage } from './Components/HomePage';\nimport { PageNotFound } from './Components/PageNotFound';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  return (\n    <div className=\"has-navbar-fixed-top\">\n      <MainNav />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={<HomePage />}\n            />\n\n            <Route\n              path=\"home\"\n              element={<Navigate to=\"/\" replace />}\n            />\n\n            <Route path=\"tabs\">\n              <Route\n                index\n                element={(\n                  <TabsPage\n                    tabs={tabs}\n                  />\n                )}\n              />\n              <Route\n                path=\":tabId\"\n                element={(\n                  <TabsPage\n                    tabs={tabs}\n                  />\n                )}\n              />\n            </Route>\n\n            <Route\n              path=\"*\"\n              element={<PageNotFound />}\n            />\n          </Routes>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}